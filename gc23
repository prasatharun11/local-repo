task minifyJs {
    description = 'Recursively minifies JavaScript files using Google Closure Compiler'
    group = 'build'
    outputs.dir jsMinDir

    doFirst {
        jsMinDir.mkdirs()
    }

    doLast {
        jsSrcDir.eachFileRecurse(org.gradle.api.file.FileType.FILES) { jsFile -> // Use FileType.FILES without import
            if (jsFile.name.endsWith('.js') && !jsFile.path.contains('minifiedJs') && !jsFile.name.endsWith('.min.js')) {
                def relativePath = jsFile.parentFile.toPath().relativize(jsSrcDir.toPath()).toString()
                def relativeDir = jsFile.parentFile.toPath().relativize(jsSrcDir.toPath()).toString()
                def relSubPath = jsSrcDir.toPath().relativize(jsFile.toPath()).parent
                def minifiedDir = new File(jsMinDir, relSubPath?.toString() ?: "")
                minifiedDir.mkdirs()

                def baseName = jsFile.name[0..-4]
                def minifiedFile = new File(minifiedDir, "${baseName}.min.js")
                def sourceMapFile = new File(minifiedDir, "${baseName}.min.js.map")

                javaexec {
                    classpath = configurations.runtimeClasspath
                    mainClass.set('com.google.javascript.jscomp.CommandLineRunner')
                    args = [
                        '--js', jsFile.absolutePath,
                        '--js_output_file', minifiedFile.absolutePath,
                        '--create_source_map', sourceMapFile.absolutePath,
                        '--compilation_level', 'SIMPLE_OPTIMIZATIONS',
                        '--source_map_format', 'V3'
                    ]
                }
            }
        }
    }
}