@Configuration
@EnableCaching
public class CacheConfig {

    @Bean
    public CacheManager cacheManager() {
        long maxHeap = Runtime.getRuntime().maxMemory();
        long cacheBudget = (long) (maxHeap * 0.2); // 20% of heap
        long avgEntrySize = 1024 * 10; // assume ~10KB average per entry

        long maxEntries = cacheBudget / avgEntrySize;

        System.out.println("ðŸ’¾ Max heap: " + (maxHeap / 1024 / 1024) + " MB");
        System.out.println("ðŸ“¦ Cache budget: " + (cacheBudget / 1024 / 1024) + " MB");
        System.out.println("ðŸ”„ Max entries in cache: " + maxEntries);

        Caffeine<Object, Object> caffeineBuilder = Caffeine.newBuilder()
            .maximumSize(maxEntries) // LRU eviction
            .recordStats()
            .removalListener((Object key, Object value, RemovalCause cause) -> {
                System.out.println("ðŸ—‘ Evicted key: " + key + " | Cause: " + cause);
            });

        return new CaffeineCacheManager("userCodeCache") {{
            setCaffeine(caffeineBuilder);
        }};
    }
}