import com.jcraft.jsch.*;
import net.lingala.zip4j.ZipFile;
import net.lingala.zip4j.exception.ZipException;

import java.io.File;
import java.util.Vector;

public class SFTPZipExtractor {

    public static void main(String[] args) {
        String sftpHost = "your-sftp-server";
        int sftpPort = 22;
        String sftpUser = "your-username";
        String sftpPassword = "your-password";
        String remoteDirectory = "/path/to/directory";

        try {
            // Step 1: Connect to SFTP server
            JSch jsch = new JSch();
            Session session = jsch.getSession(sftpUser, sftpHost, sftpPort);
            session.setPassword(sftpPassword);

            // Avoid asking for key confirmation
            session.setConfig("StrictHostKeyChecking", "no");
            session.connect();

            ChannelSftp channel = (ChannelSftp) session.openChannel("sftp");
            channel.connect();

            // Step 2: List files in remote directory
            Vector<ChannelSftp.LsEntry> files = channel.ls(remoteDirectory);

            for (ChannelSftp.LsEntry file : files) {
                String fileName = file.getFilename();
                if (fileName.endsWith(".zip")) {
                    System.out.println("Found ZIP file: " + fileName);

                    // Step 3: Check if ZIP file is password protected
                    try {
                        ZipFile zipFile = new ZipFile(remoteDirectory + "/" + fileName);
                        if (zipFile.isEncrypted()) {
                            System.out.println("The zip file is password-protected: " + fileName);
                        } else {
                            System.out.println("The zip file is not password-protected: " + fileName);
                            // Step 4: Create a folder and unzip the file
                            String folderName = fileName.substring(0, fileName.lastIndexOf("."));
                            File folder = new File(folderName);
                            if (!folder.exists()) {
                                folder.mkdirs();
                            }

                            zipFile.extractAll(folder.getAbsolutePath());
                            System.out.println("Unzipped to folder: " + folderName);
                        }
                    } catch (ZipException e) {
                        System.err.println("Error while handling the ZIP file: " + fileName);
                        e.printStackTrace();
                    }
                }
            }

            // Step 5: Disconnect from SFTP server
            channel.disconnect();
            session.disconnect();

        } catch (JSchException | SftpException e) {
            System.err.println("SFTP connection error");
            e.printStackTrace();
        }
    }
}