private static void copyRange(Sheet srcSheet, int startRow, int startCol,
                              int endRow, int endCol,
                              Sheet destSheet, int destStartRow, int destStartCol,
                              boolean copyStyle) {

    // Debug log
    System.out.printf("copyRange: src=(%d-%d, %d-%d) -> destStartRow=%d, destStartCol=%d%n",
            startRow, endRow, startCol, endCol, destStartRow, destStartCol);

    if (destStartRow < 0) {
        throw new IllegalArgumentException(
            "Invalid destination row: " + destStartRow +
            " (must be >= 0). Check caller logic."
        );
    }

    Workbook wb = srcSheet.getWorkbook();

    for (int i = 0; i <= (endRow - startRow); i++) {
        Row srcRow = srcSheet.getRow(startRow + i);
        Row destRowObj = destSheet.getRow(destStartRow + i);
        if (destRowObj == null) destRowObj = destSheet.createRow(destStartRow + i);

        if (srcRow != null) {
            destRowObj.setHeight(srcRow.getHeight());

            for (int j = 0; j <= (endCol - startCol); j++) {
                Cell srcCell = srcRow.getCell(startCol + j);
                Cell destCell = destRowObj.getCell(destStartCol + j);
                if (destCell == null) destCell = destRowObj.createCell(destStartCol + j);

                if (srcCell != null) {
                    copyCell(srcCell, destCell, wb, copyStyle);
                }
            }
        }
    }

    copyMergedRegions(srcSheet, startRow, endRow, startCol, endCol,
                      destSheet, destStartRow, destStartCol);
}